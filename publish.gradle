apply plugin: 'maven-publish'
apply plugin: 'signing'

def isReleaseBuild() {
    return !VERSION_NAME.contains("SNAPSHOT")
}

//仓库地址
def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL : "https://s01.oss.sonatype.org/content/repositories/snapshots/"
}

//用户信息
def getRepositoryUsername() {
    return hasProperty('ossrhUsername') ? ossrhUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('ossrhPassword') ? ossrhPassword : ""
}

task sourceJar(type: Jar) {
    if (isAndroidPlugin()) {
        println "is android plugin"
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    } else if (isJavaPlugin()) {
        println "is java plugin"
        from sourceSets.main.allSource
        //noinspection GroovyAccessibility
        archiveClassifier = 'sources'
    }
}

publishing {
    publications {
        uploadArchives(MavenPublication) {
            groupId GROUP_ID
            artifactId POM_ARTIFACT_ID
            version VERSION_NAME
            afterEvaluate {
                artifact bundleReleaseAar
            }
            artifact(sourceJar)
//            artifact("$buildDir/outputs/aar/${project.name}-release.aar")
            pom {
                name = POM_NAME
                packaging POM_PACKAGING
                description = POM_DESCRIPTION
                url = POM_URL
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_EMAIL
                    }
                }
                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                }
            }
        }
    }
    repositories {
        maven {
            allowInsecureProtocol true
            url = isReleaseBuild() ? getReleaseRepositoryUrl() : getSnapshotRepositoryUrl()
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }
        }
    }
}

def isJavaPlugin() {
    return plugins.hasPlugin("java-library")
}

def isAndroidPlugin() {
    return plugins.hasPlugin("com.android.library")
}

signing {
    sign publishing.publications.uploadArchives
}
